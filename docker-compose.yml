version: '3'

services:
#  core-kafka-service.core:
#    ports:
#      - "9018:80"
#    build: .
#    env_file:
#      - docker/core-kafka-service.env
#    depends_on:
#      - kafka-setup

  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
      image: confluentinc/cp-server:5.4.0
      hostname: broker1
      container_name: broker1
      depends_on:
        - zookeeper
      ports:
        - "9091:9091"
      environment:
        KAFKA_BROKER_ID: 0
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29091,PLAINTEXT_HOST://localhost:9091
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:29091
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  broker2:
      image: confluentinc/cp-server:5.4.0
      hostname: broker2
      container_name: broker2
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:29092
        CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        CONFLUENT_METRICS_ENABLE: 'true'
        CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
      image: confluentinc/cp-schema-registry:5.4.0
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - broker1
        - broker2
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  control-center:
      image: confluentinc/cp-enterprise-control-center:5.4.0
      hostname: control-center
      container_name: control-center
      depends_on:
        - zookeeper
        - broker1
        - broker2
        - schema-registry
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:29091,broker2:29092'
        CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        PORT: 9021

    # This "container" is a workaround to pre-create topics
  kafka-setup:
      image: confluentinc/cp-kafka:5.1.1
      hostname: kafka-setup
      container_name: kafka-setup
      depends_on:
        - broker1
        - broker2
        - schema-registry
      command: "bash -c 'echo Waiting for Kafka to be ready... && \
                                      cub kafka-ready -b broker1:29091,broker2:29092 1 100 && \
                                      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 6 --replication-factor 2 --topic corenonprod-kafka-service-local && \
                                      kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 6 --replication-factor 2 --topic corenonprod-kafka-service-local '"
